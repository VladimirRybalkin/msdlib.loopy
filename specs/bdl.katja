specification BDL

backend java {
  package de.hopp.generator.frontend
  import java.lang.String
  import java.lang.Integer
}

root BDLFile Pos

external String
external Integer

BDLFile (Imports imports, Backends backends, Options opts, Cores cores, GPIOs gpios, Instances insts, Medium medium, Scheduler scheduler)

Decl = Import | Backend | Option | Core | GPIO | Instance | Medium | Scheduler

Import (String file, Position pos)

// selected backends for generation
Backend (String name, Position pos)

// Definition of a new ipcore
Core (String name, String version, Position pos, Imports source, Ports ports)

Port (String name, Direction direction, Position pos, Options opts)
Direction = IN() | OUT() | DUAL()

// Instance of an ipcore
Instance(String name, String core, Position pos, Bindings bind)

Binding = Axis(String port, String axis, Position pos, Options opts)
        | CPUAxis(String port, Position pos, Options opts)

GPIO (String name, Direction direction, Position pos, Code callback)

// Definition of the attached medium
Medium = NONE()
       | ETHERNET(Position pos, MOptions opts)
       | UART    (Position pos, MOptions opts) 
       | PCIE    (Position pos, MOptions opts)

// General constants and flags for board and ports (care for invalid combinations)
Option = HWQUEUE (Position pos, Integer qsize)
       | SWQUEUE (Position pos, Integer qsize)
       | BITWIDTH(Position pos, Integer bit)
       | POLL    (Position pos)

MOption = MAC    (Position pos, String val)
        | IP     (Position pos, String val)
        | MASK   (Position pos, String val)
        | GATE   (Position pos, String val)
        | PORTID (Position pos, Integer val)

Scheduler (Position pos, Code code)

Code = DEFAULT() | USER_DEFINED(Strings content)

Position (String filename, Integer line)

// List types
Imports   * Import
Backends  * Backend
Options   * Option
MOptions  * MOption
Cores     * Core
GPIOs     * GPIO
Instances * Instance
Ports     * Port
Strings   * String
Bindings  * Binding
Decls     * Decl
